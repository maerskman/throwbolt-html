var name="Zoe";
var age=4;
age=age+1;
-return: 5


greeting="Cakelover";
greeting + " party";
---------------------------------
greeting="Cakelover";
greeting + " party";
- return:  "Cakelover party"


var totalAfterTax = 53.03; // uses camelCase if the variable name is multiple words
var tip = 8; // uses lowercase if the variable name is one word



*
 * Programming Quiz: Converting Tempatures (2-2)
 *
 * Use the Celsius-to-Fahrenheit formula to set the fahrenheit varible:
 *
 *     F = C x 1.8 + 32
 *
 * Log the fahrenheit variable to the console.
 *
 */

original code:
var celsius = 12;
var fahrenheit = /* convert celsius to fahrenheit here */

console.log(/* print out result here */);




var celsius = 12;
var fahrenheit = celsius * 1.8+32;
console.log(53.6);

--------------------------------------------------------------------------------------------------------------

Indexing
Did you know that you can access individual characters in a string? To access an individual character, you can use the character's location in the string, called its index. Just put the index of the character inside square brackets (starting with [0] as the first character) immediately after the string. For example:

"James"[0];
Returns: "J"
or more commonly, you will see it like this, using a variable:

var name = "James";
name[0];
Returns: "J"






var name = "James";
name[0];



var name = "Curt the Awsomeness";
name[0];







-------------------------------------------------------------------------------------------




Escaping strings
There are some cases where you might want to create a string that contains more than just numbers and letters. For example, what if you want to use quotes in a string?

"The man whispered, "please speak to me.""
Uncaught SyntaxError: Unexpected identifier
If you try to use quotes within a string, you will receive a SyntaxError like the one above.

Because you need to use quotes to denote the beginning and end of strings, the JavaScript engine misinterprets the meaning of your string by thinking "The man whispered, " is the string. Then, it sees the remaining please speak to me."" and returns a SyntaxError.

If you want to use quotes inside a string, and have JavaScript not misunderstand your intentions, you’ll need a different way to write quotes. Thankfully, JavaScript has a way to do this using the backslash character ( \ ).
----------------------------------------------------------------------------------------------





Special characters

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Using_special_characters_in_strings


Quotes aren’t the only special characters that need to be escaped, there’s actually quite a few. However, to keep it simple, here’s a list of some common special characters in JavaScript.

Code	Character
\	\ (backslash)
\"	'' (double quote)
\'	' (single quote)
\n	newline
\t	tab
The last two characters listed in the table, newline \n and tab \t, are unique because they add additional whitespace to your Strings. A newline character will add a line break and a tab character will advance your line to the next tab stop.

"Up up\n\tdown down"
Returns:
Up up
 down down
QUIZ QUESTION

Select the string that returns the following output:

"The file located at "C:\\Desktop\My Documents\Roster\names.txt" contains the names on the roster."



Var defcon="Awesome";
console.log(defcon);


var defcon = prompt("defcon is awesome");
console.log(`awesome`);




-------------------------------------------------------------------------------------------





 1. Intro to Data Types
 2. Numbers
 3. Comments
 4. Quiz: First Expression (2-1)
 5. Strings
 6. String Concatenation
 7. Variables
 8. Quiz: Converting Temperatures (2-2)
 9. String Index
 10. Escaping Strings
 11. Comparing Strings
 12. Quiz: Favorite Food (2-3)
 13. Quiz: String Equality for All (2-4)
 14. Quiz: All Tied Up (2-5)
 15. Quiz: Yosa Buson (2-6)
 16. Booleans
 17. Quiz: Facebook Post (2-7)
 18. Null, Undefined, and NaN
 19. Equality
 20. Quiz: Semicolons! (2-8)
 21. Quiz: What's my Name? (2-9)
 22. Quiz: Out to Dinner (2-10)
 23. Quiz: Mad Libs (2-11)
 24. Quiz: One Awesome Message (2-12)
 25. Lesson 2 Summary





 https://classroom.udacity.com/courses/ud803/lessons/74007e2e-2a0a-4de3-a8a6-5c2ec4275773/concepts/5f0a00eb-e0c7-4b3f-a24d-400cad12176e

































